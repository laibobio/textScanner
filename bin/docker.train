if [ "$1" == "" ]; then
    echo "Usage: bin/docker.train #GPU <console>"
    exit
fi

if [ "$1" == "stop" ]; then
    echo "Try to shutdown training docker container ..."
    docker ps|grep textscanner|awk '{print $1}'|xargs docker stop
    exit
fi

PWD=`pwd`

if [ "$2" == "term" ]; then
    echo "Run container to terminal ..."
    docker run --rm -it \
    -e NVIDIA_VISIBLE_DEVICES=$1 \
    -t --rm  \
    --runtime=nvidia  \
    --env http_proxy="http://172.17.0.1:8123" \
    --env https_proxy="http://172.17.0.1:8123" \
    --env HTTP_PROXY="http://172.17.0.1:8123" \
    --env HTTPS_PROXY="http://172.17.0.1:8123" \
    --mount type=bind,source=$PWD,target=/root/textscanner \
    --mount type=bind,source=/root/.keras,target=/root/.keras \
    --mount type=bind,source=/app/data/textscanner/20200602_syntext/,target=/root/textscanner/data \
    --name textscanner_term \
    --workdir /root/textscanner \
    textscanner.img
    exit
fi

if [ "$2" == "console" ]; then
    echo "Run docker train in console ..."
    docker run --rm -it \
    -e NVIDIA_VISIBLE_DEVICES=$1 \
    -t --rm  \
    --runtime=nvidia  \
    --mount type=bind,source=$PWD,target=/root/textscanner \
    --mount type=bind,source=/root/.keras,target=/root/.keras \
    --mount type=bind,source=/app/data/textscanner/20200602_syntext/,target=/root/textscanner/data \
    --name textscanner \
    --workdir /root/textscanner \
    textscanner.img \
    bin/train.sh $2
    exit
fi

echo "Run docker train in background (PRODUCTION MODE)..."
docker run --rm -it -d \
    -e NVIDIA_VISIBLE_DEVICES=$1 \
    -t --rm  \
    --runtime=nvidia  \
    --mount type=bind,source=$PWD,target=/root/textscanner \
    --mount type=bind,source=/root/.keras,target=/root/.keras \
    --mount type=bind,source=/app/data/textscanner/20200602_syntext/,target=/root/textscanner/data \
    --name textscanner \
    --workdir /root/textscanner \
    textscanner.img \
    bin/train.sh
